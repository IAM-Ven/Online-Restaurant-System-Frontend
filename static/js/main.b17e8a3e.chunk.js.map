{"version":3,"sources":["pages/Menu.jsx","pages/Chefs.jsx","utils/jwt.js","redux/actions/user.js","components/LoginForm.js","pages/Signin.jsx","layouts/EmployeeLayout.js","components/CustomerNav.js","layouts/CustomerLayout.js","layouts/index.js","auth.js","Routes.js","App.jsx","serviceWorker.js","redux/reducers/user.js","redux/reducers/index.js","redux/store.js","config.js","index.js"],"names":["Menu","state","data","isLoading","this","setState","dishId","dishTitle","dishDescription","dishPrice","console","log","className","icon","faUtensils","size","color","Grid","container","direction","justify","alignItems","spacing","map","el","item","key","onError","event","target","src","width","height","alt","Divider","length","substring","Button","variant","React","Component","Chefs","setJwtHeader","token","axios","defaults","headers","common","setUser","user","type","payload","login","formData","history","dispatch","a","api","post","localStorage","jwt","setItem","authorization","id","username","role","closed","push","getUser","get","logout","removeItem","LoginForm","useState","setUsername","password","setPassword","error","setError","useDispatch","useHistory","handleLogin","htmlFor","placeholder","name","value","onChange","e","onClick","Signin","props","EmployeeLayout","children","href","NavBar","useSelector","handleLogout","go","Navbar","collapseOnSelect","expand","bg","to","Brand","Toggle","aria-controls","Collapse","Nav","Text","Form","inline","FormControl","isEmpty","NavDropdown","title","faCartPlus","alignRight","Item","faBriefcase","CustomerLayout","Layout","page","isPrivate","Page","OriginalComponent","ComposedComponent","checkAuth","getItem","location","pathname","mapStateToProps","mapDispatchToProps","connect","authPage","Routes","exact","path","render","Boolean","window","hostname","match","initialState","userReducer","action","reducers","combineReducers","middleware","thunkMiddleware","promiseMiddleware","middlewareEnhancer","applyMiddleware","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","baseURL","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.b17e8a3e.chunk.js","sourcesContent":["import React from 'react';\r\nimport {Grid, Divider} from '@material-ui/core/';\r\nimport {Navbar, Button} from 'react-bootstrap';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faUtensils } from '@fortawesome/free-solid-svg-icons';\r\n\r\nimport './Menu.css';\r\n\r\nexport default class Menu extends React.Component{\r\n    constructor(){\r\n      super();\r\n\r\n      this.state = {\r\n        data: [],\r\n        isLoading: true,\r\n      }\r\n    }\r\n\r\n    componentDidMount(){\r\n      //**MAKE API CALL TO BACKEND HERE**//\r\n      this.setState({\r\n        isLoading:false,\r\n        data: [\r\n          {\r\n            dishId: 1,\r\n            dishTitle: \"Cup Cake\",\r\n            dishDescription: \"Some sort of description for a dish\",\r\n            dishPrice: \"5.99\"\r\n          },\r\n          {\r\n            dishId: 2,\r\n            dishTitle: \"Cheese Cake\",\r\n            dishDescription: \"Some sort of description for a dish except this one is a bit longer and it may overflow\",\r\n            dishPrice: \"8.99\"\r\n          },\r\n          {\r\n            dishId: 3,\r\n            dishTitle: \"Birthday Cake\",\r\n            dishDescription: \"Some sort of description for a dish\",\r\n            dishPrice: \"2.99\"\r\n          },\r\n          {\r\n            dishId: 4,\r\n            dishTitle: \"Cookie Cake\",\r\n            dishDescription: \"Some sort of description for a dish\",\r\n            dishPrice: \"15.99\"\r\n          },\r\n          {\r\n            dishId: 5,\r\n            dishTitle: \"Some Other Type Of Cake\",\r\n            dishDescription: \"Some sort of description for a dish\",\r\n            dishPrice: \"5.99\"\r\n          },\r\n        ]\r\n      })\r\n    }\r\n\r\n    render() {\r\n      const { data, isLoading} = this.state;\r\n      console.log(data)\r\n      return (\r\n        <>\r\n        <div className=\"page-title-container\">\r\n          <div className=\"page-title-text\">\r\n            Menu\r\n          </div>\r\n          <div className=\"menu-icon-divider-container\">\r\n            <hr className=\"title-divider-left\"/>\r\n            <FontAwesomeIcon icon={faUtensils} size=\"2x\" color=\"gray\" />\r\n            <hr className=\"title-divider-right\"/>\r\n          </div>\r\n        </div>\r\n        {!isLoading ? \r\n        (\r\n        <div className=\"menu-items-container\">\r\n          <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\" spacing={2}>\r\n            {data.map( (el) => \r\n              (\r\n                <Grid item key={el.dishId}>\r\n                  <div className=\"item-container\">\r\n                    <div className=\"dish-img-container\">\r\n                      <img\r\n                        onError={(event) => { event.target.src = \"/favicon.png\"; }}\r\n                        src=\"/menu-item-img-default.jpg\"\r\n                        width=\"298\"\r\n                        height=\"200\"\r\n                        alt=\"dish\"\r\n                      />\r\n                    </div>\r\n                    <Divider/>\r\n                    <div className=\"dish-title-container\">\r\n                      {el.dishTitle}\r\n                    </div>\r\n                    {/* The following code renders the dish description */}\r\n                    {/* If the dish description is too long, the substring is used followed by ellipses to indicate overflow */}\r\n                    {el.dishDescription.length > 71 ?\r\n                      (\r\n                        <div className=\"dish-desc-container\">\r\n                          {el.dishDescription.substring(0,71) + ' ...' }\r\n                        </div>\r\n                      )\r\n                      :\r\n                      (\r\n                        <div className=\"dish-desc-container\">\r\n                          {el.dishDescription}\r\n                        </div>\r\n                      )\r\n                    }\r\n                    <div className=\"price-add-btn-container\">\r\n                      <div className=\"dish-price-container\">\r\n                        ${el.dishPrice}\r\n                      </div>\r\n                      <div className=\"add-cart-btn\">\r\n                        <Button variant=\"success\">Add to Cart</Button>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </Grid>\r\n              )\r\n            )}\r\n          </Grid>\r\n        </div>\r\n        ) \r\n        : \r\n        <h3>\r\n          Unable to Load Menu Data\r\n        </h3>\r\n        }\r\n        </>\r\n      );\r\n    }\r\n}","import React from 'react';\r\n\r\nexport default class Chefs extends React.Component{\r\n\r\n    render() {\r\n      return (\r\n        <h1>\r\n          Chefs page\r\n        </h1>\r\n      );\r\n    }\r\n}","import axios from \"axios\";\r\n\r\nconst setJwtHeader = (token) => {\r\n  if (token) {\r\n    axios.defaults.headers.common[\"Authorization\"] = `Bearer ${token}`;\r\n  } else {\r\n    delete axios.defaults.headers.common[\"Authorization\"];\r\n  }\r\n};\r\n\r\nexport { setJwtHeader };\r\n","import api from \"axios\";\r\nimport { setJwtHeader } from \"../../utils/jwt\";\r\n\r\nconst setUser = (user) => {\r\n  return {\r\n    type: \"SET_USER\",\r\n    payload: user,\r\n  };\r\n};\r\n\r\nconst resetUser = () => {\r\n  return {\r\n    type: \"RESET_USER\",\r\n  };\r\n};\r\n\r\nconst login = (formData, history) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const { data, headers } = await api.post(\"/auth\", formData);\r\n      console.log(localStorage.jwt, data);\r\n      localStorage.setItem(\"jwt\", headers.authorization);\r\n      localStorage.setItem(\"userId\", data.id);\r\n      dispatch(\r\n        setUser({\r\n          id: data.id,\r\n          username: data.username,\r\n          role: data.role,\r\n          closed: data.closed,\r\n        })\r\n      );\r\n      history.push(\"/\");\r\n    } catch (err) {\r\n      throw err;\r\n    }\r\n  };\r\n};\r\n\r\nconst getUser = (id) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const { data } = await api.get(`/users/${id}`);\r\n      console.log(localStorage.jwt, data);\r\n      dispatch(\r\n        setUser({\r\n          id: data.id,\r\n          username: data.username,\r\n          role: data.role,\r\n          closed: data.closed,\r\n        })\r\n      );\r\n    } catch (err) {}\r\n  };\r\n};\r\n\r\nconst logout = (history) => {\r\n  return async (dispatch) => {\r\n    localStorage.removeItem(\"jwt\");\r\n    localStorage.removeItem(\"userId\");\r\n    setJwtHeader(false);\r\n    dispatch(resetUser());\r\n    history.push(\"/\");\r\n  };\r\n};\r\n\r\nexport { login, logout, setUser, getUser };\r\n","import React, { useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { login } from \"../redux/actions/user\";\r\n\r\nconst LoginForm = () => {\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n\r\n  const handleUsernameChange = (e) => {\r\n    setUsername(e.target.value);\r\n  };\r\n\r\n  const handlePasswordChange = (e) => {\r\n    setPassword(e.target.value);\r\n  };\r\n\r\n  const handleLogin = async () => {\r\n    try {\r\n      await dispatch(login({ username, password }, history));\r\n    } catch (err) {\r\n      setError(\"Can't Login. Please try again.\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <label htmlFor=\"username\">\r\n        <b>Username</b>\r\n      </label>\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Enter Username\"\r\n        name=\"username\"\r\n        value={username}\r\n        onChange={handleUsernameChange}\r\n      />\r\n\r\n      <label htmlFor=\"password\">\r\n        <b>Password</b>\r\n      </label>\r\n      <input\r\n        type=\"password\"\r\n        placeholder=\"Enter Password\"\r\n        name=\"password\"\r\n        value={password}\r\n        onChange={handlePasswordChange}\r\n      />\r\n      <button onClick={handleLogin}>Login</button>\r\n      {error && <div>{error}</div>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoginForm;\r\n","import React from \"react\";\r\nimport LoginForm from \"../components/LoginForm\";\r\n\r\nconst Signin = (props) => {\r\n  return (\r\n    <div>\r\n      <h1>Sign in page</h1>\r\n      <LoginForm />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Signin;\r\n","import React from \"react\";\r\n\r\nconst EmployeeLayout = ({ children }) => {\r\n  return (\r\n    <div>\r\n      Employee Layout for Login Employee:{\" \"}\r\n      <a href=\"https://material-ui.com/store/previews/devias-kit/\">\r\n        Template that will be added soon\r\n      </a>\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EmployeeLayout;\r\n","import React from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { isEmpty } from \"lodash\";\r\nimport { logout } from \"../redux/actions/user\";\r\n\r\nimport {\r\n  Nav,\r\n  Navbar,\r\n  NavDropdown,\r\n  Form,\r\n  FormControl,\r\n  Button,\r\n} from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faCartPlus, faBriefcase } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst NavBar = () => {\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const user = useSelector(({ user }) => user);\r\n\r\n  const handleLogout = async () => {\r\n    dispatch(logout(history));\r\n    history.go(0);\r\n  };\r\n\r\n  return (\r\n    <Navbar collapseOnSelect expand=\"lg\" bg=\"dark\" variant=\"dark\">\r\n      <Link to=\"/\">\r\n        <Navbar.Brand>Postmates 2.0</Navbar.Brand>\r\n      </Link>\r\n      <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n      <Navbar.Collapse>\r\n        <Nav className=\"mr-auto\">\r\n          <Link to=\"/Menu\">\r\n            <Navbar.Text>Menu</Navbar.Text>\r\n          </Link>\r\n          <Link to=\"/Chefs\">\r\n            <Navbar.Text>Chefs</Navbar.Text>\r\n          </Link>\r\n          <Form inline>\r\n            <FormControl className=\"mr-sm-2\" type=\"text\" placeholder=\"Search\" />\r\n            <Button variant=\"outline-info\">Search</Button>\r\n          </Form>\r\n        </Nav>\r\n        <Nav>\r\n          {isEmpty(user) && (\r\n            <Link to=\"/signin\">\r\n              <Navbar.Text>Sign-In</Navbar.Text>\r\n            </Link>\r\n          )}\r\n          {!isEmpty(user) && (\r\n            <Navbar.Text onClick={handleLogout} className=\"btn\">\r\n              Logout\r\n            </Navbar.Text>\r\n          )}\r\n          {!isEmpty(user) && user.role === \"CUSTOMER\" && (\r\n            <NavDropdown\r\n              title={<FontAwesomeIcon icon={faCartPlus} size=\"2x\" />}\r\n              id=\"collapsible-nav-dropdown\"\r\n              alignRight\r\n            >\r\n              <NavDropdown.Item>My Cart</NavDropdown.Item>\r\n            </NavDropdown>\r\n          )}\r\n          {!isEmpty(user) && user.role !== \"CUSTOMER\" && (\r\n            <Link to=\"/employee\" className=\"d-flex  align-items-center\">\r\n              <FontAwesomeIcon icon={faBriefcase} size=\"2x\" />\r\n            </Link>\r\n          )}\r\n        </Nav>\r\n      </Navbar.Collapse>\r\n    </Navbar>\r\n  );\r\n};\r\n\r\nexport default NavBar;\r\n","import React from \"react\";\r\nimport NavBar from \"../components/CustomerNav\";\r\n\r\nconst CustomerLayout = ({ children }) => {\r\n  return (\r\n    <>\r\n      <NavBar />\r\n      {children}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CustomerLayout;\r\n","import React from \"react\";\r\nimport EmployeeLayout from \"./EmployeeLayout\";\r\nimport CustomerLayout from \"./CustomerLayout\";\r\nimport authPage from \"../auth\";\r\nconst Layout = ({ page, isPrivate, type, ...props }) => {\r\n  //Need to use user role\r\n  const Page = authPage(page, isPrivate);\r\n  return (\r\n    <>\r\n      {type === \"employee\" ? (\r\n        <EmployeeLayout {...props}>\r\n          <Page {...props} />\r\n        </EmployeeLayout>\r\n      ) : (\r\n        <CustomerLayout {...props}>\r\n          <Page {...props} />\r\n        </CustomerLayout>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Layout;\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { getUser } from \"./redux/actions/user\";\r\nimport { isEmpty } from \"lodash\";\r\n\r\nexport default (OriginalComponent, isPrivate = false) => {\r\n  class ComposedComponent extends Component {\r\n    checkAuth = async () => {\r\n      await this.props.getUser(localStorage.getItem(\"userId\"));\r\n      if (isEmpty(this.props.user) && isPrivate) {\r\n        this.props.history.push(\"/signin\");\r\n      }\r\n      if (\r\n        !isEmpty(this.props.user) &&\r\n        (this.props.location.pathname === \"/signin\" ||\r\n          this.props.location.pathname === \"/register\")\r\n      ) {\r\n        this.props.history.push(\"/\");\r\n      }\r\n    };\r\n\r\n    componentDidMount() {\r\n      this.checkAuth();\r\n    }\r\n\r\n    render() {\r\n      return <OriginalComponent {...this.props} />;\r\n    }\r\n  }\r\n\r\n  const mapStateToProps = (state) => {\r\n    return {\r\n      user: state.user,\r\n    };\r\n  };\r\n\r\n  const mapDispatchToProps = (dispatch) => {\r\n    return {\r\n      getUser: (id) => dispatch(getUser(id)),\r\n    };\r\n  };\r\n\r\n  return connect(mapStateToProps, mapDispatchToProps)(ComposedComponent);\r\n};\r\n","import React from \"react\";\r\nimport Menu from \"./pages/Menu\";\r\nimport Chefs from \"./pages/Chefs\";\r\nimport Signin from \"./pages/Signin\";\r\nimport { Switch, Route, Redirect } from \"react-router-dom\";\r\nimport Layout from \"./layouts\";\r\n\r\nconst Routes = () => {\r\n  return (\r\n    <Switch>\r\n      {/* Customer Routes */}\r\n\r\n      <Route\r\n        exact\r\n        path=\"/\"\r\n        render={(props) => <Layout page={() => <div>Home</div>} {...props} />}\r\n      />\r\n      <Route\r\n        exact\r\n        path=\"/menu\"\r\n        render={(props) => <Layout page={Menu} {...props} />}\r\n      />\r\n      <Route\r\n        exact\r\n        path=\"/chefs\"\r\n        render={(props) => <Layout page={Chefs} {...props} />}\r\n      />\r\n      <Route\r\n        exact\r\n        path=\"/signin\"\r\n        render={(props) => <Layout page={Signin} {...props} />}\r\n      />\r\n      <Route\r\n        exact\r\n        path=\"/account\"\r\n        render={(props) => (\r\n          <Layout\r\n            isPrivate={true}\r\n            page={() => <div>Customer Account</div>}\r\n            {...props}\r\n          />\r\n        )}\r\n      />\r\n\r\n      {/* Employee Routes */}\r\n\r\n      <Route\r\n        exact\r\n        path=\"/employee\"\r\n        render={(props) => (\r\n          <Layout\r\n            isPrivate={true}\r\n            type=\"employee\"\r\n            page={() => <div>Employees HOmes</div>}\r\n            {...props}\r\n          />\r\n        )}\r\n      />\r\n      <Route render={() => <Redirect to=\"/\" />} />\r\n    </Switch>\r\n  );\r\n};\r\n\r\nexport default Routes;\r\n","import React from \"react\";\r\nimport { HashRouter as Router } from \"react-router-dom\";\r\nimport Routes from \"./Routes\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"./App.css\";\r\n\r\nexport default () => {\r\n  return (\r\n    <Router>\r\n      <Routes />\r\n    </Router>\r\n  );\r\n};\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","const initialState = {};\r\n\r\nconst userReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case \"SET_USER\":\r\n      return { ...state, ...action.payload };\r\n    case \"RESET_USER\":\r\n      return {};\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default userReducer;\r\n","import { combineReducers } from \"redux\";\r\nimport user from \"./user\";\r\n\r\nconst reducers = combineReducers({\r\n  user,\r\n});\r\n\r\nexport default reducers;\r\n","import { applyMiddleware, createStore, compose } from \"redux\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport reducers from \"./reducers\";\r\nimport promiseMiddleware from \"redux-promise\";\r\nimport logger from \"redux-logger\";\r\n\r\nlet middleware = [thunkMiddleware, promiseMiddleware];\r\nif (process.env.NODE_ENV === \"development\") {\r\n  middleware = [...middleware, logger];\r\n}\r\n\r\nconst middlewareEnhancer = applyMiddleware(...middleware);\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducers, composeEnhancers(middlewareEnhancer));\r\n\r\nexport default store;\r\n","import axios from \"axios\";\r\nimport { setJwtHeader } from \"./utils/jwt\";\r\n\r\nconst BACKEND_URL = `http://localhost:8080/api`;\r\n\r\nconst configAxios = (token) => {\r\n  axios.defaults.baseURL = BACKEND_URL;\r\n  setJwtHeader(token);\r\n};\r\n\r\nexport { BACKEND_URL, configAxios };\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport store from \"./redux/store\";\r\nimport { Provider } from \"react-redux\";\r\nimport { configAxios } from \"./config\";\r\n\r\nconfigAxios(localStorage.jwt);\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}